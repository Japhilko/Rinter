install.packages("mapdata")
install.packages("gpclib")
install.packages("micromap")
install.packages("micromapST")
install.packages("Grid2Polygons")
devtools::install_github("hrbrmstr/nominatim")
install.packages("rgrass7")
install.packages("choroplethrMaps")
install.packages("choroplethr")
install.packages("mapplots")
install.packages("intamap")
install.packages("mapproj")
install.packages("pheatmap")
#------------------------#
# Data sources (geographical)
#------------------------#
install.packages("SmarterPoland")
install.packages("rWBclimate")
install.packages("rgbif")
install.packages("oce")
install.packages("Quandl") # https://www.quandl.com/help/r
install.packages("eurostat")
install.packages("GDELTtools")
install.packages("HistData")
#------------------------#
# Packages for samples estimation etc
#------------------------#
install.packages("survey")
install.packages("sampling")
install.packages("svyPVpack")
install.packages("samplingVarEst")
install.packages("VGAM")
install.packages("fmsb") # Nagelkerke
# Hierarchical Models, und Multilevel Models
install.packages("lme4")
install.packages("nlme")
install.packages("arm")
install.packages("hglm")   # Hierarchical Generalized Linear Models
install.packages("influence.ME")   # Tools for detecting influential data in mixed effects models
install.packages("MEMSS")
# Raking
install.packages("rake")  # Raking
install.packages("anesrake")  #  Raking
install.packages("RankAggreg") # Raking
# Cohen's D:
install.packages("compute.es")
install.packages("lsr")
#------------------------#
# Regression etc.
#------------------------#
install.packages("MASS")
install.packages("Zelig")
install.packages("phia")
install.packages("dummies")
install.packages("gmodels") # GREG with binary Data
#---------------------------#
# Machine Learning
#---------------------------#
install.packages("homals")
install.packages("lsbclust")
install.packages("SVMMaj")
install.packages("glmnet")
install.packages("smacof")
install.packages("munfold")
install.packages("pls")
install.packages("BiplotGUI")
install.packages("psy")
install.packages("homals")
#------------------------#
# Imputation
#------------------------#
install.packages("Amelia")
#------------------------#
# Use the web with R
#------------------------#
# Packages fuer internet of things
install.packages("rjson")
install.packages("RCurl")
install.packages("googleVis")
install.packages("plotKML") # isualization of Spatial and Spatio-Temporal Objects in Google Earth
install.packages("lubridate")
install.packages("rplos")   #Interface to PLoS Journals API methods
install.packages("LaF")   # Fast access to large ASCII files
install.packages("rdryad")  # Dryad API interface
install.packages("RXKCD")   # Get XKCD comic from R
install.packages("rgbif") # A programmatic interface to the Web Service methods
install.packages("Rfacebook")
install.packages("htmltab")
#------------------------#
# Text Mining
#------------------------#
install.packages("wordcloud")
install.packages("tm")    # Text Mining Package
install.packages("Rpoppler")
#------------------------#
# Panel-Data
#------------------------#
install.packages("plm")
#------------------------#
# structural equation modelling
#------------------------#
install.packages("semGOF")
install.packages("sem")
# install.packages("OpenMx")
# network analysis
install.packages("igraph")
install.packages("Statnet")
#------------------------#
# Psychological Diagnostic
#------------------------#
install.packages("eRm")      # extended Rasch modeling
install.packages("pwr")
#------------------------#
# linear Algebra
#------------------------#
install.packages("orthopolynom")
install.packages("pdist")
install.packages("rstiefel")
#------------------------#
# Optimisation Algorithms
#------------------------#
install.packages("DEoptim")
install.packages("GenSA")
install.packages("optimx")
install.packages("subselect")
#------------------------#
# Packages for Distributions
#------------------------#
install.packages("timeDate")
install.packages("lmomco")
install.packages("modeest")
#------------------------#
# Screen Scraping
#------------------------#
install.packages("XML")
install.packages("RSXML")
install.packages("scrapeR")
install.packages("RGoogleAnalytics")
install.packages("rga")
install.packages("grImport")
install.packages("grConvert")
install.packages("rvest")
install.packages("splitstackshape")
#------------------------#
# Linked Open Data
#------------------------#
install.packages("datamart")
install.packages(c('SPARQL','igraph','network','ergm'),dependencies=TRUE)
#------------------------#
# Databases
#------------------------#
install.packages("RPostgreSQL")
install.packages("RMySQL")
install.packages("RSQLite")
install.packages("RNetCDF")
install.packages("DBI")
install.packages("RJDBC")
install.packages("SPARQL")
install.packages("sqldf")
#------------------------#
# Other interesting Packages
#------------------------#
install.packages("bindata")
install.packages("simba")
install.packages("proxy")
install.packages("gregmisc")
# combinatorics
install.packages("combinat")
install.packages("animation")
install.packages("clusterSim")
install.packages("archivist")
install.packages("rj")
#------------------------#
# Packages for faster or better computation
#------------------------#
install.packages("plyr")
install.packages("reshape")
# Jobs distributed
install.packages("Rmpi")
install.packages("SNOW")
install.packages("nws")
install.packages("Rcpp")
#------------------------#
# image recognition
#------------------------#
install.packages("adimpro")
#------------------------#
# Interfaces
#------------------------#
install.packages("rggobi")  # Interface between R and GGobi
install.packages("translate2R")
install.packages("jsonlite")
install.packages("rJava")
# http://www.rforge.net/JRI/
install.packages("JRI")
install.packages("roxygen2")
5076*13
5076*12
4112*12
library(ggmap)
from <- "Mannheim Seckenheimer Hauptsrasse 135"
to <- "Mannheim B6,12"
route_df <- route(from, to, structure = "route")
route_df
qmap("Mannheim Hbf", zoom = 13) +
geom_path(
aes(x = lon, y = lat),  colour = "red", size = 1.5,
data = route_df, lineend = "round"
)
qmap("Mannheim Wasserturm", zoom = 13) +
geom_path(
aes(x = lon, y = lat),  colour = "red", size = 1.5,
data = route_df, lineend = "round"
)
qmap("Mannheim Wasserturm", zoom = 12) +
geom_path(
aes(x = lon, y = lat),  colour = "red", size = 1.5,
data = route_df, lineend = "round"
)
qmap("Mannheim DÃ¼rerstrasse", zoom = 13) +
geom_path(
aes(x = lon, y = lat),  colour = "red", size = 1.5,
data = route_df, lineend = "round"
)
qmap("Mannheim Duererstrasse", zoom = 13) +
geom_path(
aes(x = lon, y = lat),  colour = "red", size = 1.5,
data = route_df, lineend = "round"
)
qmap("Mannheim Duererstrasse", zoom = 12) +
geom_path(
aes(x = lon, y = lat),  colour = "red", size = 1.5,
data = route_df, lineend = "round"
)
qmap("Mannheim Seckenheimer Hauptsrasse 135", zoom = 14) +
geom_path(
aes(x = lon, y = lat),  colour = "red", size = 1.5,
data = route_df, lineend = "round"
)
qmap("Mannheim Neuostheimerstrasse 1", zoom = 14) +
geom_path(
aes(x = lon, y = lat),  colour = "red", size = 1.5,
data = route_df, lineend = "round"
)
library("sp")
citation("sp")
install.packages(xgboost)
install.packages("xgboost")
install.packages("sparklyr")
install.packages("devtools")
devtools::install_github("rstudio/sparklyr")
library(sparklyr)
spark_install(version = "1.6.1")
install.packages("bigmemory")
install.packages("parallel")
library(parallel)
install.packages("RcppParallel")
?parallelfor
library(RcppParallel)
?parallelfor
?parallelFor
?parallelReduce
library(RcppParallel)
?parallelReduce
```
install.packages("microbenchmark")
?within
install.packages("ddr")
install.packages("ddR")
install.packages("snow")
?ddR::parts
?ddr::dlapply
?ddR::dlapply
?dist
install.packages("kmeans.ddR")
install.packages("jailbreakr")
install.packages("devtools")
devtools::install_github("rsheets/jailbreakr")
install.packages("linen")
install.packages("openxlsx")
install.packages("XLConnect")
install.packages("rexcel")
install.packages("googlesheets")
install.packages("flashR")
library(devtools)
devtools::install_github("rstudio/crosstalk")
library(crosstalk)
?colMeans
dim(x) <- c(50,2)
x <- 1:100
dim(x) <- c(50,2)
install.packages("simPop")
library(simPop)
install.packages("flexdashboard")
plot(1:100)
hist(table(sample(1:10,100,replace=T)))
install.packages("readr")
install.packages("dygraphs")
install.packages("lint")
install.packages("broom")
install.packages("Rho")
install.packages("tibble")
library(tibble)
df <- data.frame(xyz ="a")
df$x
is.data.frame(df[,"xyz"])
library(tibble)
df <- data.frame(xyz ="a")
df$x
is.data.frame(df[,"xyz"])
library(devtools)
install_github("hadley/modelr")
?rmse
install.packages("Metrics")
library("Metrics")
?rmse
?mutate
library(plyr)
?mutate
library(ggplot2)
?tidyr::unnest
?geom_freqpoly
library(USAboundaries)
install.packages("USAboundaries")
c18 <- us_boundaries(as.Date("1820-01-01"))
?left_join
library(dplyr)
?left_join
?group_by
install_github("rstudio/gggeom")
?compute_smooth_vec
library(ggstat)
install.packages("ggstat")
##
install.packages("MAVIS")
install.packages("metafor")
install.packages("madness")
install.packages("rempreq")
library(devtools)
install_github("amilleranalytics/rempreq")
install_github("FirebrowseR")
install.packages("LaF")
install.packages("chunked")
install_github("meyera/riskscorer")
install.packages("stplanr")
library(stplanr)
?line2route
plot(flowlines)
install.packages("xgboost")
install.packages("gbm")
install.packages("wkb")
install.packages("rgdal2")
install_github("edzer/rgdal2")
library(devtools)
install_github("edzer/rgdal2")
library(doParallel)
?registerDoParallel
install.packages("validate")
install.packages("tm")
install.packages("wordcloud")
install.packages("SnowballC")
install.packages("lsa")
install.packages("textcat")
install.packages("translate")
install.packages("RTextTools")
library(miniUI)
?gadgetTitleBar
?miniContentPanel
?miniButtonBlock
knitr::opts_chunk$set(echo = TRUE)
library(archivist)
install.packages("archivist"")
install.packages("archivist")
GGally::ggpairs
?GGally::ggpairs
install.packages("GGally")
knitr::opts_chunk$set(echo = TRUE,message=F,warning=F)
?GGally::ggmatrix
plotList <- list()
for (i in 1:6) {
plotList[[i]] <- ggally_text(paste("Plot #", i, sep = ""))
}
library(GGally)
plotList <- list()
for (i in 1:6) {
plotList[[i]] <- ggally_text(paste("Plot #", i, sep = ""))
}
a <- ggmatrix(
plotList,
2, 3,
c("A", "B", "C"),
c("D", "E"),
byrow = TRUE
)
a
ggduo(psych, 1:3, 4:8, showStrips=F)
GGally::ggduo(psych, 1:3, 4:8, showStrips=F)
?GGally::ggduo # between correlation
install.packages("ggduo")
library(GGally)
ggduo(psych, 1:3, 4:8, showStrips=F)
install.packages("rbokeh")
knitr::opts_chunk$set(echo = TRUE)
library(rbokeh)
knitr::opts_chunk$set(echo = TRUE,warning=F)
library(rbokeh)
knitr::opts_chunk$set(echo = TRUE,warning=F,message=F)
?rbokeh::figure
figure() %>% ly_points(1:10)
figure() %>%
ly_points(1:10) %>%
tool_lasso_select()
?ly_points
z <- lm(dist ~ speed, data = cars)
p <- figure() %>%
ly_points(cars, hover = cars) %>%
ly_lines(lowess(cars), legend = "lowess") %>%
ly_abline(z, type = 2, legend = "lm", width = 2)
p
?gmap
gmap(title = "NYC taxi pickups January 2013",
lat = 40.74, lng = -73.95, zoom = 11,
map_type = "roadmap", width = 1000, height = 800) %>%
ly_hexbin(nyctaxihex, alpha = 0.5,
palette = "Spectral10", trans = log, inv = exp)
?tool_hover
figure(title = "hover a blue point") %>%
ly_points(1:10, lname = "blue", lgroup = "g1") %>%
ly_points(2:12, lname = "orange", lgroup = "g1") %>%
tool_hover(custom_callback(
code = "debugger;if(cb_data.index['1d'].indices.length > 0)
orange_data.get('data').x[cb_data.index['1d'].indices] += 0.1
orange_data.trigger('change')", "orange"), "blue")
install.packages("sparklyr")
install.packages("profvis")
install.packages("feather")
install.packages("purrr")
install.packages("svglite")
install.packages("flexdashboard", type = "source")
install.packages("data.table")
install.packages("data.table")
demo("graphics")
wiki <- "http://de.wikipedia.org/wiki/"
titles <- c("Zika-Virus", "Influenza-A-Virus_H1N1", "Spanische_Grippe", "Influenzavirus","Vogelgrippe_H5N1","Legionellose-Ausbruch_in_Warstein_2013", "Legionellose-Ausbruch_in_JÃ¼lich_2014")
length(titles)
73+49+81.35+20+160+17.9+46.65+57.17+52.5+25.3+610+17+230+70
a <- sample(1:5,100)
table(a)
a
a <- sample(1:5,100)
a <- sample(1:5,100,replace=T)
table(a)
library(knitr)
kable(table(a))
kable(iris)
kable(head(iris))
library(ggmap)
qmap("MZES Mannheim")
qmap("MZES Mannheim",zoom=18)
?qmap
qmap("Mannheim A5,6",zoom=18, maptype = "satellite")
install.packages("profvis")
install.packages("profvis")
sample(1:100,1000000,replace=T)
ab <- sample(1:100,1000000000000,replace=T)
ab <- sample(1:100,100000000000,replace=T)
ab <- sample(1:100,10000000000,replace=T)
ab <- sample(1:100,1000000000,replace=T)
install.packages("miner")
slidepath <- "D:/Daten/GitHub/RSocialScience/slides"
rmdslidepath <- "D:/Eigene Dateien/Dokumente/GitHub/Rinter/rmd_slides"
wikipath <- "D:/GESIS/Workshops/Rinter.wiki"
setwd(rmdslidepath)
chapters2 <- dir()
chapters <- gsub(".Rmd","",chapters2)
chapters
i<-3
pdfslidespath <- "D:/Eigene Dateien/Dokumente/GitHub/Rinter/pdf_slides"
rmarkdown::render(chapters2[i],
output_format = "beamer_presentation",
output_file=paste0(chapters[i],".pdf"),
output_dir=pdfslidespath)
library(trelloR)
library(trelloR)
url = "https://trello.com/b/nC8QJJoZ/trello-development-roadmap"
idb = get_id_board(url = url)
cards = get_board_cards(idb, limit = 5)
cards
captain = trello_search_members("Captain America", token = my_token)
url = "https://trello.com/b/ImArAkdt/forschung"
idb = get_id_board(url = url)
cards = get_board_cards(idb, limit = 5)
idb
cards
cards$id
cards$name
url = "https://trello.com/b/ImArAkdt/forschung"
idb = get_id_board(url = url)
cards = get_board_cards(idb, limit = 5)
cards$name
cards$desc
cards$descData
cards$pos
cards$due
url = "https://trello.com/b/ImArAkdt/forschung"
idb = get_id_board(url = url)
cards = get_board_cards(idb, limit = 5)
id <- cards$id
cards$name
cards$due
cards$idMembers
cards$url
